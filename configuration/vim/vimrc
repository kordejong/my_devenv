set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" After adding a plugin, run:
" vim +PluginInstall +qall
Plugin 'VundleVim/Vundle.vim'
Plugin 'vimwiki/vimwiki'
" Plugin 'Valloric/YouCompleteMe'
Plugin 'tpope/vim-fugitive'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

call vundle#end()            " required
filetype plugin indent on    " required


syntax on

set laststatus=2

scriptencoding utf-8
set encoding=utf-8

set shiftwidth=4
set tabstop=4
" set foldmethod=syntax
set nofoldenable
set autowrite
set expandtab
set showmatch
set list
set listchars=tab:»·,trail:·
set hlsearch
set digraph

" highlight ColorColumn ctermbg=7
" set colorcolumn=81

" match ErrorMsg '\%>80v.\+'


" http://vimdoc.sourceforge.net/htmldoc/options.html#'backspace'
set backspace=indent,eol,start

runtime macros/matchit.vim

set wildignore+=*.pyc

" " syntax match nonascii "[^\d0-\d127]"
" highlight nonascii guibg=Red ctermbg=2 term=standout
" "termbg=2
" au BufReadPost * syntax match nonascii "[^\u0000-\u007F]"


" let g:netrw_liststyle=3

" autocmd FileType cpp setlocal nowrap

" autocmd FileType cpp setlocal shiftwidth=4 tabstop=4
" autocmd FileType cmake setlocal shiftwidth=4 tabstop=4
" autocmd FileType python setlocal shiftwidth=4 tabstop=4
" autocmd FileType pyrex setlocal shiftwidth=4 tabstop=4
" autocmd FileType vimwiki setlocal shiftwidth=4 tabstop=4


" Associate .dox extension with Doxygen files.
au BufRead,BufNewFile *.dox setfiletype cpp.doxygen
au BufRead,BufNewFile *.md setfiletype markdown


"-------------------------------------------------------------------------------
let g:ctrlp_by_filename = 1
let g:ctrlp_regexp = 1


"-------------------------------------------------------------------------------
let g:tagbar_autoclose = 1
nnoremap <silent> <F9> :TagbarOpenAutoClose<CR>
let g:tagbar_width = 40


"-------------------------------------------------------------------------------
"let g:airline_powerline_fonts = 1
let g:airline_theme = "solarized"
" " Whitespace checks slow airline down a lot.
" let g:airline#extensions#whitespace#checks = []

" set statusline=%F%m%r%h%w\ FF=%{&ff}\ TYPE=%Y\ RC=%l,%v\ %p%%\ LEN=%L
" TODO How to set this in normal mode...
" let g:airline_section_z = "%p%"

"-------------------------------------------------------------------------------

" Default color scheme.
" set background=dark
" set t_Co=256
" colorscheme peaksea
" if &diff
"   colorscheme darkblue
" endif

" http://vimdoc.sourceforge.net/htmldoc/indent.html#cinoptions-values
"set cinoptions=>1s,{1s
" autocmd FileType python setlocal textwidth=78 tabstop=4 softtabstop=4 shiftwidth=4 expandtab
" autocmd FileType c      setlocal textwidth=78 tabstop=4 softtabstop=2 shiftwidth=2 expandtab cindent



" add a lot of boilerplate for a class property
" when current line .h file is like:
"  type d_property;
" map <F1> :.!cppPropertyCode.py %<.h<CR>

" tries to add the correct include file for a class name
" present at the current line
map <F2> :.!guard_includes.py<CR>

" switch to SomethingTest.cc if Something.* is the current file
map <F3> :n %<Test.cc <CR>

" switch to SomethingTest.h if Something.* is the current file
map <F4> :n %<.h <CR>

" switch to SomethingTest.c* if Something.* is the current file
" .c* pick up .c .cc .cpp
map <F5> :n %<.c* <CR>

" fmt current line?
map <F6> :.!fmt<CR>

set makeprg=build_target.py

map <F8> :make --project %:p:h<CR>
map <F9> :make --test %:p:h<CR>
map <F10> :make --object %:p<CR>

" read the doxygen template for function/method header
map <F11> :r $MY_DEVENV/template/source/header.dox<CR>

" step throug compile errors (usually after F8,F9,F10)
map <F12> :cn<CR>
