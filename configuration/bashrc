function add_file_to_vim_init()
{
    local filename=$1
    # VIMINIT Must be a single ex command. We may want to source
    # multiple init's, so we concatenate them. Source new file before
    # current ones, assuming the first vimrc's contain the most important
    # things which override the latter ones. Otherwise finetune this with
    # {append,prepend}_file_to_vim_init().
    export VIMINIT="so $filename | $VIMINIT"
}


cwd=$(cd "$(dirname "${BASH_SOURCE[0]}" )" && pwd)


if [ ! "$MY_DEVENV" ]; then
    export MY_DEVENV=$cwd/..
fi

if [ ! "$PROJECTS" ]; then
    export PROJECTS=$MY_DEVENV/..
fi

if [ ! "$OBJECTS" ]; then
    export OBJECTS=$PROJECTS/../objects
fi


add_file_to_vim_init $cwd/vim/vimrc


alias sourceforge="ssh -t kordejong,pcraster@shell.sourceforge.net create"

# ------------------------------------------------------------------------------
export PATH=$MY_DEVENV/script:$PATH

# os_path_sep=`python -c "import os; print os.pathsep"`
# 
# export PYTHONPATH=$MY_DEVENV/source$os_path_sep$PYTHONPATH


# ------------------------------------------------------------------------------
platform=$cwd/platform

alias lsb_gransasso="source $platform/lsb_gransasso.sh"
alias lsb_hyper="source $platform/lsb_hyper.sh"
alias lsb_jacinto="source $platform/lsb_jacinto.sh"

alias gcc_gransasso="source $platform/gcc_gransasso.sh"
alias gcc_hyper="source $platform/gcc_hyper.sh"
alias gcc_jacinto="source $platform/gcc_jacinto.sh"
alias gcc_triklav="source $platform/gcc_triklav.sh"

alias clang_gransasso="source $platform/clang_gransasso.sh"
alias clang_triklav="source $platform/clang_triklav.sh"
alias clang_mpi_triklav="source $platform/clang_mpi_triklav.sh"

alias mingw_32_gransasso="source $platform/mingw_32_gransasso.sh"
alias mingw_32_win764="source $platform/mingw_32_win764.sh"

alias mingw_64_gransasso="source $platform/mingw_64_gransasso.sh"
alias mingw_64_win764="source $platform/mingw_64_win764.sh"

alias vs_14_win764.sh="source $platform/vs_14_win764.sh"

unset platform


# ------------------------------------------------------------------------------
software=$cwd/software

alias pcraster_hyper="source $software/pcraster_hyper.sh"
alias pcraster_gransasso="source $software/pcraster_gransasso.sh"
alias pcraster_sonic="source $software/pcraster_sonic.sh"

unset software


# ------------------------------------------------------------------------------
project=$cwd/project

alias geoneric="source $PROJECTS/geoneric/environment/configuration/bash_profile"
### alias pcraster-master="source $PROJECTS/pcraster/environment/configuration/PCRaster-master"
### alias pcraster-4.0="source $PROJECTS/pcraster/environment/configuration/PCRaster-4.0"
### alias pcraster-4.1="source $PROJECTS/pcraster/environment/configuration/pcraster-4.1"

alias atlas="source $project/atlas.sh"
alias fern="source $project/fern.sh"
alias fern_python="source $project/fern_python.sh"
alias generic_algorithm_code="source $project/generic_algorithm_code.sh"
alias gghdc="source $project/gghdc.sh"
alias grep_track="source $project/grep_track.sh"
alias lisem="source $project/lisem.sh"
alias lue="source $project/lue.sh"
alias maps4society="source $project/maps4society.sh"
alias nautilus="source $project/nautilus.sh"
alias natural_capital_models="source $project/natural_capital_models.sh"
alias pcraster_publications="source $project/pcraster_publications.sh"
alias pcraster="source $project/pcraster.sh"
alias pcraster_hpx="source $project/pcraster_hpx.sh"
alias performance_analyst="source $project/performance_analyst.sh"
alias phd="source $project/phd.sh"
alias pigeon="source $project/pigeon.sh"
alias quick_scan="source $project/quick_scan.sh"
alias rasterformat="source $project/rasterformat.sh"
alias rivm_afweging="source $project/rivm_afweging.sh"
alias rivm_atlas="source $project/rivm_atlas.sh"
alias rivm_teebstad_doc="source $project/rivm_teebstad_doc.sh"
alias rivm_teebstad_sdv="source $project/rivm_teebstad_sdv.sh"
alias spatial_century="source $project/spatial_century.sh"
alias starling="source $project/starling.sh"
alias uu_flowmap="source $project/uu_flowmap.sh"
alias waddenacademie="source $project/waddenacademie.sh"

unset project


# ------------------------------------------------------------------------------
export CTEST_OUTPUT_ON_FAILURE=1

export HISTSIZE=10000
export EDITOR=vim
export CVSEDITOR=vim
export CVS_RSH=ssh

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8


### export PCRASTER_DAL_FORMATS="CSF, ESRI Shapefile"

### if [ ! "$DEVENVRC" ]; then
###     export DEVENVRC=$cwd/devenvrc
### fi


set -o vi

if [ ! -e "$HOME/.screenrc" ]; then
    export SCREENRC=$cwd/screenrc
fi

if [ ! -e "$HOME/.inputrc" ]; then
    export INPUTRC=$cwd/inputrc
fi


alias grep="grep --color=auto"
alias ls="ls --human-readable --color=auto"
alias ll="ls -l"
alias viout="vi out"
alias shout="bash ./out"
alias df="df --human-readable"
alias screen="screen -U"
alias tree="tree -C"
alias start_http_server-2="python -m SimpleHTTPServer"
alias start_http_server-3="python -m http.server"
alias update_vim_plugins="vim +PluginInstall +qall"
alias ssh_triklav_zaadmarkt="ssh -t triklav_zaadmarkt caffeinate -i bash -l"

alias docker_list_running="docker ps --quiet"
alias docker_list_exited="docker ps --all --quiet --filter=status=exited"
alias docker_stop_running="docker stop \$(docker_list_running)"
alias docker_remove_exited="docker rm -v \$(docker_list_exited)"


# bashrc:
export PS1="\u@\h:\W\$ "

PYTHONSTARTUP="$cwd/startup.py"
if [ $OSTYPE == "cygwin" ]; then
    PYTHONSTARTUP=`cygpath -m "$PYTHONSTARTUP"`
fi
export PYTHONSTARTUP

# Make sure environment variables are expanded on the command line.
if [[ $BASH_VERSION == "4.2."* ]]; then
    shopt -s direxpand
fi
shopt -s cdspell  # Fix minor errors in spelling of directory names.


unset cwd
