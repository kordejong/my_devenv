function add_file_to_vim_init()
{
    local filename=$1
    # VIMINIT Must be a single ex command. We may want to source
    # multiple init's, so we concatenate them. Source new file before
    # current ones, assuming the first vimrc's contain the most important
    # things which override the latter ones. Otherwise finetune this with
    # {append,prepend}_file_to_vim_init().
    export VIMINIT="so $filename | $VIMINIT"
}


cwd=$(cd "$(dirname "${BASH_SOURCE[0]}" )" && pwd)


export MY_DEVENV="$cwd/.."

if [ ! "$PROJECTS" ]; then
    echo "PROJECTS not set yet"
fi

if [ ! "$OBJECTS" ]; then
    echo "OBJECTS not set yet"
fi


unset VIMINIT
add_file_to_vim_init $cwd/vim/vimrc


alias sourceforge="ssh -t kordejong,pcraster@shell.sourceforge.net create"

# ------------------------------------------------------------------------------
export PATH=$MY_DEVENV/script:$PATH

# os_path_sep=`python -c "import os; print os.pathsep"`
# 
# export PYTHONPATH=$MY_DEVENV/source$os_path_sep$PYTHONPATH


# ------------------------------------------------------------------------------
# platform=$cwd/platform
# 
# alias lsb_gransasso="source $platform/lsb_gransasso.sh"
# alias lsb_hyper="source $platform/lsb_hyper.sh"
# alias lsb_jacinto="source $platform/lsb_jacinto.sh"
# 
# alias gcc_gransasso="source $platform/gcc_gransasso.sh"
# alias gcc_hyper="source $platform/gcc_hyper.sh"
# alias gcc_jacinto="source $platform/gcc_jacinto.sh"
# alias gcc_triklav="source $platform/gcc_triklav.sh"
# 
# alias clang_gransasso="source $platform/clang_gransasso.sh"
# alias clang_triklav="source $platform/clang_triklav.sh"
# alias clang_mpi_triklav="source $platform/clang_mpi_triklav.sh"
# 
# alias mingw_32_gransasso="source $platform/mingw_32_gransasso.sh"
# alias mingw_32_win764="source $platform/mingw_32_win764.sh"
# 
# alias mingw_64_gransasso="source $platform/mingw_64_gransasso.sh"
# alias mingw_64_win764="source $platform/mingw_64_win764.sh"
# 
# alias vs_14_win764.sh="source $platform/vs_14_win764.sh"
# 
# unset platform


# ------------------------------------------------------------------------------
# software=$cwd/software
# 
# alias pcraster_hyper="source $software/pcraster_hyper.sh"
# alias pcraster_gransasso="source $software/pcraster_gransasso.sh"
# alias pcraster_sonic="source $software/pcraster_sonic.sh"
# 
# unset software


# ------------------------------------------------------------------------------
project=$cwd/project

alias geoneric="source $PROJECTS/gauja/geoneric/executive/geoneric/environment/configuration/bash_profile"
alias tmux_geoneric="tmuxp load $PROJECTS/gauja/geoneric/executive/geoneric/environment/configuration/geoneric.yaml"
alias geoneric_eu="source $PROJECTS/gauja/geoneric/executive/geoneric/environment/configuration/geoneric_eu.sh"
alias tmux_geoneric_eu="tmuxp load $PROJECTS/gauja/geoneric/executive/geoneric/environment/configuration/geoneric_eu.yaml"
alias placebook="source $PROJECTS/gauja/geoneric/executive/geoneric/environment/configuration/placebook.sh"
alias tmux_placebook="tmuxp load $PROJECTS/gauja/geoneric/executive/geoneric/environment/configuration/placebook.yaml"
alias lue_qgis="source $PROJECTS/gauja/geoneric/executive/geoneric/environment/configuration/lue_qgis.sh"
alias tmux_lue_qgis="tmuxp load $PROJECTS/gauja/geoneric/executive/geoneric/environment/configuration/lue_qgis.yaml"
alias track_time="source $PROJECTS/gauja/geoneric/executive/geoneric/environment/configuration/track_time.sh"
alias tmux_track_time="tmuxp load $PROJECTS/gauja/geoneric/executive/geoneric/environment/configuration/track_time.yaml"
### alias pcraster-master="source $PROJECTS/pcraster/environment/configuration/PCRaster-master"
### alias pcraster-4.0="source $PROJECTS/pcraster/environment/configuration/PCRaster-4.0"
### alias pcraster-4.1="source $PROJECTS/pcraster/environment/configuration/pcraster-4.1"

alias paper_2024_lue="source $project/paper_2024_lue.sh"
# alias paper_2019_physical_data_model="source $project/paper_2019_physical_data_model.sh"
# alias paper_2020_scalable_algorithms="source $project/paper_2020_scalable_algorithms.sh"
# alias atlas="source $project/atlas.sh"
alias fern="source $project/fern.sh"
alias fern_python="source $project/fern_python.sh"
alias gauja="source $project/gauja.sh"
alias tmux_gauja="tmuxp load $project/gauja.yaml"
# alias generic_algorithm_code="source $project/generic_algorithm_code.sh"
alias gghdc="source $project/gghdc.sh"
# alias grep_track="source $project/grep_track.sh"
# alias infomov="source $project/infomov.sh"
alias kor_jemig_eu="source $project/kor_jemig_eu.sh"
alias tmux_kor_jemig_eu="tmuxp load $project/kor_jemig_eu.yaml"
# alias lisem="source $project/lisem.sh"

# alias hpc-classroom="source $project/hpc-classroom.sh"
# alias tmux_hpc-classroom="tmuxp load $project/hpc-classroom.yaml"
alias lue="source $project/lue.sh"
alias tmux_lue="tmuxp load $project/lue.yaml"
alias lue_consume="source $project/lue_consume.sh"
alias tmux_lue_consume="tmuxp load $project/lue_consume.yaml"
alias lue_doc="source $project/lue_doc.sh"
alias tmux_lue_doc="tmuxp load $project/lue_doc.yaml"
alias ruminations="source $project/ruminations.sh"
alias tmux_ruminations="tmuxp load $project/ruminations.yaml"
alias lue_qa="source $project/lue_qa.sh"
alias tmux_lue_qa="tmuxp load $project/lue_qa.yaml"
alias lue-web="source $project/lue-web.sh"
alias tmux_lue-web="tmuxp load $project/lue-web.yaml"
alias computationalgeography-web="source $project/computationalgeography-web.sh"
alias tmux_computationalgeography-web="tmuxp load $project/computationalgeography-web.yaml"
alias pycatch="source $project/pycatch.sh"
alias tmux_pycatch="tmuxp load $project/pycatch.yaml"

# alias maps4society="source $project/maps4society.sh"
# alias nautilus="source $project/nautilus.sh"
alias adaptation_pathways="source $project/adaptation_pathways.sh"
alias tmux_adaptation_pathways="tmuxp load $project/adaptation_pathways.yaml"
alias natural_capital_models="source $project/natural_capital_models.sh"
alias tmux_natural_capital_models="tmuxp load $project/natural_capital_models.yaml"
alias bdp="source $project/bdp.sh"
alias tmux_bdp="tmuxp load $project/bdp.yaml"
alias nature_of_code="source $project/nature_of_code.sh"
alias tmux_nature_of_code="tmuxp load $project/nature_of_code.yaml"

alias pcr_globwb="source $project/pcr_globwb.sh"
alias tmux_pcr_globwb="tmuxp load $project/pcr_globwb.yaml"

# alias pcraster_publications="source $project/pcraster_publications.sh"
alias pcraster="source $project/pcraster.sh"
# alias pcraster_hpx="source $project/pcraster_hpx.sh"
# alias performance_analyst="source $project/performance_analyst.sh"
# alias phd="source $project/phd.sh"
# alias tmux_phd="tmuxp load $project/phd.yaml"
# alias pigeon="source $project/pigeon.sh"
# alias quick_scan="source $project/quick_scan.sh"
 # alias rasterformat="source $project/rasterformat.sh"
# alias rivm_afweging="source $project/rivm_afweging.sh"
# alias rivm_atlas="source $project/rivm_atlas.sh"
# alias rivm_teebstad_doc="source $project/rivm_teebstad_doc.sh"
# alias rivm_teebstad_sdv="source $project/rivm_teebstad_sdv.sh"
# alias spatial_century="source $project/spatial_century.sh"
# alias starling="source $project/starling.sh"
alias uu="source $project/uu.sh"
alias tmux_uu="tmuxp load $project/uu.yaml"
# alias uu_flowmap="source $project/uu_flowmap.sh"
# alias waddenacademie="source $project/waddenacademie.sh"
alias parallel_computing_course="source $project/parallel_computing_course.sh"
alias tmux_parallel_computing_course="tmuxp load $project/parallel_computing_course.yaml"

alias snippets="source $project/snippets.sh"
alias tmux_snippets="tmuxp load $project/snippets.yaml"

alias my_documents="source $project/my_documents.sh"
alias tmux_my_documents="tmuxp load $project/my_documents.yaml"

alias lue_tutorial="source $project/lue_tutorial.sh"
alias tmux_lue_tutorial="tmuxp load $project/lue_tutorial.yaml"

alias invest="source $project/invest.sh"
alias tmux_invest="tmuxp load $project/invest.yaml"

alias lue_course="source $project/lue_course.sh"
alias tmux_lue_course="tmuxp load $project/lue_course.yaml"

unset project


# ------------------------------------------------------------------------------
# export CTEST_OUTPUT_ON_FAILURE=1

export HISTSIZE=10000
export EDITOR=vim
# export CVSEDITOR=vim
# export CVS_RSH=ssh

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8


### export PCRASTER_DAL_FORMATS="CSF, ESRI Shapefile"

### if [ ! "$DEVENVRC" ]; then
###     export DEVENVRC=$cwd/devenvrc
### fi

# export MYVIFMRC=$MY_DEVENV/configuration/vifmrc

set -o vi

if [ ! -e "$HOME/.screenrc" ]; then
    export SCREENRC=$cwd/screenrc
fi

if [ ! -e "$HOME/.inputrc" ]; then
    export INPUTRC=$cwd/inputrc
fi


alias grep="grep --color=auto"
alias ls="ls -h --color=auto"
alias ll="ls -l"
alias viout="vi out"
alias vimout="vim out"
alias nvimout="nvim out"
alias gitout="git status | tee out && vi out"
alias shout="bash ./out"
alias df="df -h"
# alias screen="screen -U"
alias tree="tree -C"
# alias start_http_server-2="python -m SimpleHTTPServer"
alias start_http_server="python -m http.server"
# alias update_vim_plugins="vim +PluginInstall +qall"
# alias ssh_triklav_zaadmarkt="ssh -t triklav_zaadmarkt caffeinate -i bash -l"

# alias docker_list_running="docker ps --quiet"
# alias docker_list_exited="docker ps --all --quiet --filter=status=exited"
# alias docker_stop_running="docker stop \$(docker_list_running)"
# alias docker_remove_exited="docker rm -v \$(docker_list_exited)"

alias status_of_my_projects="my_git.py status gauja github"


# bashrc:
# export PS1="\u@\h:\W\$ "
# export PS1="\u@\h:\WðŸ‘‰ "

# PYTHONSTARTUP="$cwd/startup.py"
# if [ $OSTYPE == "cygwin" ]; then
#     PYTHONSTARTUP=`cygpath -m "$PYTHONSTARTUP"`
# fi
# export PYTHONSTARTUP


test -r "~/.dir_colors" && eval $(dircolors ~/.dir_colors)


# Make sure environment variables are expanded on the command line.
# if [[ $BASH_VERSION >= "4.2."* ]]; then
    shopt -s direxpand
# fi
shopt -s cdspell  # Fix minor errors in spelling of directory names.


unset cwd
